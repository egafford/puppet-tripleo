# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
require 'ipaddr'

# Custom function to lookup the interface which matches the subnet
# of the provided IP address.
# The function iterates over all the interfaces and chooses the
# first locally assigned interface which matches the IP.
# ---- original file header ----
#
# @summary
#   Find the bind IP address for the provided subnet.
#
Puppet::Functions.create_function(:'interface_for_ip') do
  # @param arg
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :arg
  end


  def default_impl(*arg)
    
    if arg[0].class == String
      begin
        ip_to_find = arg[0]
        Dir.foreach('/sys/class/net/') do |interface|
          next if interface == '.' or interface == '..'
          iface_no_dash = interface.gsub('-', '_')
          interface_ip = lookupvar("ipaddress_#{iface_no_dash}")
          netmask = lookupvar("netmask_#{iface_no_dash}")
          if not interface_ip.nil? then
            ip1=IPAddr.new(interface_ip)
            ip2=IPAddr.new(ip_to_find)
            if ip1.mask(netmask) == ip2.mask(netmask) then
              return interface
            end
          end
        end
      rescue JSON::ParserError
        raise Puppet::ParseError, "Syntax error: #{arg[0]} is invalid"
      end
    else
      raise Puppet::ParseError, "Syntax error: #{arg[0]} is not a String"
    end
    return ''
  
  end
end
